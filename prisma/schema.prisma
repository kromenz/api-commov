generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid      String     @id @default(uuid())
  firstName String
  lastName  String
  avatar    Bytes?
  username  String
  password  String
  email     String     @unique
  type      Boolean
  trips     UserTrip[]
}

model Trip {
  uuid         String         @id @default(uuid())
  description  String
  name         String
  startDate    DateTime
  endDate      DateTime
  rating       Float
  users        UserTrip[]
  TripLocation TripLocation[]
}

model Location {
  uuid         String         @id @default(uuid())
  name         String
  description  String
  type         LocationType   @relation(fields: [typeId], references: [uuid])
  typeId       String
  rating       Float
  latitude     Float?
  longitude    Float?
  photos       Photo[]
  TripLocation TripLocation[]
}

model LocationType {
  uuid     String     @id @default(uuid())
  name     String
  Location Location[]

  @@unique([name])
  // Adding predefined types
  // These will be seeded to the database when you first migrate
  @@map("location_types")
}

model Photo {
  uuid       String   @id @default(uuid())
  data       String   @db.Text
  location   Location @relation(fields: [locationId], references: [uuid])
  locationId String
}

model TripLocation {
  trip       Trip     @relation(fields: [tripId], references: [uuid])
  tripId     String
  location   Location @relation(fields: [locationId], references: [uuid])
  locationId String

  @@id([tripId, locationId])
}

model UserTrip {
  user   User   @relation(fields: [userId], references: [uuid])
  userId String
  trip   Trip   @relation(fields: [tripId], references: [uuid])
  tripId String

  @@id([userId, tripId])
}
